{"version":3,"file":"index.cjs.js","sources":["../fromRef.ts","../interfaces.ts","../utils.ts","../object/index.ts","../list/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { database } from 'firebase';\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { ListenEvent, QueryChange } from './interfaces';\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\nexport function fromRef(\n  ref: database.Query,\n  event: ListenEvent\n): Observable<QueryChange> {\n  return new Observable<QueryChange>(subscriber => {\n    const fn = ref.on(\n      event,\n      (snapshot, prevKey) => {\n        subscriber.next({ snapshot, prevKey, event });\n      },\n      subscriber.error.bind(subscriber)\n    );\n    return {\n      unsubscribe() {\n        ref.off(event, fn);\n      }\n    };\n  }).pipe(\n    // Ensures subscribe on observable is async. This handles\n    // a quirk in the SDK where on/once callbacks can happen\n    // synchronously.\n    delay(0)\n  );\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { database } from 'firebase';\n\nexport enum ListenEvent {\n  added = 'child_added',\n  removed = 'child_removed',\n  changed = 'child_changed',\n  moved = 'child_moved',\n  value = 'value'\n}\n\nexport interface QueryChange {\n  snapshot: database.DataSnapshot;\n  prevKey: string | null | undefined;\n  event: ListenEvent;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ListenEvent } from './interfaces';\n\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\nexport function validateEventsArray(events?: ListenEvent[]): ListenEvent[] {\n  if (events == null || events.length === 0) {\n    events = [\n      ListenEvent.added,\n      ListenEvent.removed,\n      ListenEvent.changed,\n      ListenEvent.moved\n    ];\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { database } from 'firebase';\nimport { QueryChange, ListenEvent } from '../interfaces';\nimport { fromRef } from '../fromRef';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Get the snapshot changes of an object\n * @param query\n */\nexport function object(query: database.Query): Observable<QueryChange> {\n  return fromRef(query, ListenEvent.value);\n}\n\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nexport function objectVal<T>(\n  query: database.Query,\n  keyField?: string\n): Observable<T> {\n  return fromRef(query, ListenEvent.value).pipe(\n    map(change => changeToData(change, keyField) as T)\n  );\n}\n\nexport function changeToData(change: QueryChange, keyField?: string): {} {\n  const val = change.snapshot.val();\n\n  // val can be a primitive type\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  return {\n    ...val,\n    ...(keyField ? { [keyField]: change.snapshot.key } : null)\n  };\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { database } from 'firebase';\nimport { QueryChange, ListenEvent } from '../interfaces';\nimport { Observable, of, merge, from } from 'rxjs';\nimport { validateEventsArray } from '../utils';\nimport { fromRef } from '../fromRef';\nimport { switchMap, scan, distinctUntilChanged, map } from 'rxjs/operators';\nimport { changeToData } from '../object';\n\nexport function stateChanges(\n  query: database.Query,\n  events?: ListenEvent[]\n): Observable<QueryChange> {\n  events = validateEventsArray(events);\n  const childEvent$ = events.map(event => fromRef(query, event));\n  return merge(...childEvent$);\n}\n\nfunction fromOnce(query: database.Query): Observable<QueryChange> {\n  return from(query.once(ListenEvent.value)).pipe(\n    map(snapshot => {\n      const event = ListenEvent.value;\n      return { snapshot, prevKey: null, event };\n    })\n  );\n}\n\nexport function list(\n  query: database.Query,\n  events?: ListenEvent[]\n): Observable<QueryChange[]> {\n  const eventsList = validateEventsArray(events);\n  return fromOnce(query).pipe(\n    switchMap(change => {\n      const childEvent$ = [of(change)];\n      for (const event of eventsList) {\n        childEvent$.push(fromRef(query, event));\n      }\n      return merge(...childEvent$).pipe(scan(buildView, []));\n    }),\n    distinctUntilChanged()\n  );\n}\n\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nexport function listVal<T>(\n  query: database.Query,\n  keyField?: string\n): Observable<T[]> {\n  return list(query).pipe(\n    map(arr => arr.map(change => changeToData(change, keyField) as T))\n  );\n}\n\nfunction positionFor(changes: QueryChange[], key: string | null): number {\n  const len = changes.length;\n  for (let i = 0; i < len; i++) {\n    if (changes[i].snapshot.key === key) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction positionAfter(changes: QueryChange[], prevKey?: string): number {\n  if (prevKey == null) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current: QueryChange[], change: QueryChange): QueryChange[] {\n  const { snapshot, prevKey, event } = change;\n  const { key } = snapshot;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n  switch (event) {\n    case ListenEvent.value:\n      if (change.snapshot && change.snapshot.exists()) {\n        let prevKey: string | null = null;\n        change.snapshot.forEach(snapshot => {\n          const action: QueryChange = {\n            snapshot,\n            event: ListenEvent.value,\n            prevKey\n          };\n          prevKey = snapshot.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n      return current;\n    case ListenEvent.added:\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        const previous = current[currentKeyPosition - 1];\n        if (((previous && previous.snapshot.key) || null) !== prevKey) {\n          current = current.filter(x => x.snapshot.key !== snapshot.key);\n          current.splice(afterPreviousKeyPosition, 0, change);\n        }\n      } else if (prevKey == null) {\n        return [change, ...current];\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, change);\n      }\n      return current;\n    case ListenEvent.removed:\n      return current.filter(x => x.snapshot.key !== snapshot.key);\n    case ListenEvent.changed:\n      return current.map(x => (x.snapshot.key === key ? change : x));\n    case ListenEvent.moved:\n      if (currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n      return current;\n    // default will also remove null results\n    default:\n      return current;\n  }\n}\n"],"names":["Observable","delay","ListenEvent","map","merge","from","switchMap","of","scan","distinctUntilChanged"],"mappings":"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"}