{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { list, object, listVal } from 'rxfire/database';\nimport { useObservable, checkIdField, checkStartWithValue } from '..';\nimport { map } from 'rxjs/operators';\nvar CACHED_QUERIES = '_reactFireDatabaseCachedQueries';\nvar cachedQueries = globalThis[CACHED_QUERIES] || [];\n\nif (!globalThis[CACHED_QUERIES]) {\n  globalThis[CACHED_QUERIES] = cachedQueries;\n}\n\nfunction getUniqueIdForDatabaseQuery(query) {\n  var index = cachedQueries.findIndex(function (cachedQuery) {\n    return cachedQuery.isEqual(query);\n  });\n\n  if (index > -1) {\n    return index;\n  }\n\n  return cachedQueries.push(query) - 1;\n}\n\nexport function useDatabaseObject(ref, options) {\n  return useObservable(object(ref), \"database:object:\" + ref.toString(), options ? options.startWithValue : undefined);\n}\n\nfunction objectVal(query, keyField) {\n  return object(query).pipe(map(function (change) {\n    return changeToData(change, keyField);\n  }));\n}\n\nfunction changeToData(change, keyField) {\n  var _a;\n\n  var val = change.snapshot.val();\n\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  return __assign(__assign({}, change.snapshot.val()), keyField ? (_a = {}, _a[keyField] = change.snapshot.key, _a) : null);\n}\n\nexport function useDatabaseObjectData(ref, options) {\n  var idField = checkIdField(options);\n  return useObservable(objectVal(ref, idField), \"database:objectVal:\" + ref.toString() + \":idField=\" + idField, checkStartWithValue(options));\n}\nexport function useDatabaseList(ref, options) {\n  var hash = \"database:list:\" + getUniqueIdForDatabaseQuery(ref);\n  return useObservable(list(ref), hash, options ? options.startWithValue : undefined);\n}\nexport function useDatabaseListData(ref, options) {\n  var idField = checkIdField(options);\n  return useObservable(listVal(ref, idField), \"database:listVal:\" + getUniqueIdForDatabaseQuery(ref) + \":idField=\" + idField, checkStartWithValue(options));\n}","map":{"version":3,"sources":["/Users/shiyuezhang/Desktop/myFiles/Chronolo-Geese/calendar-manager/node_modules/reactfire/database/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","list","object","listVal","useObservable","checkIdField","checkStartWithValue","map","CACHED_QUERIES","cachedQueries","globalThis","getUniqueIdForDatabaseQuery","query","index","findIndex","cachedQuery","isEqual","push","useDatabaseObject","ref","options","toString","startWithValue","undefined","objectVal","keyField","pipe","change","changeToData","_a","val","snapshot","key","useDatabaseObjectData","idField","useDatabaseList","hash","useDatabaseListData"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { list, object, listVal } from 'rxfire/database';\nimport { useObservable, checkIdField, checkStartWithValue } from '..';\nimport { map } from 'rxjs/operators';\nvar CACHED_QUERIES = '_reactFireDatabaseCachedQueries';\nvar cachedQueries = globalThis[CACHED_QUERIES] || [];\nif (!globalThis[CACHED_QUERIES]) {\n    globalThis[CACHED_QUERIES] = cachedQueries;\n}\nfunction getUniqueIdForDatabaseQuery(query) {\n    var index = cachedQueries.findIndex(function (cachedQuery) { return cachedQuery.isEqual(query); });\n    if (index > -1) {\n        return index;\n    }\n    return cachedQueries.push(query) - 1;\n}\nexport function useDatabaseObject(ref, options) {\n    return useObservable(object(ref), \"database:object:\" + ref.toString(), options ? options.startWithValue : undefined);\n}\nfunction objectVal(query, keyField) {\n    return object(query).pipe(map(function (change) { return changeToData(change, keyField); }));\n}\nfunction changeToData(change, keyField) {\n    var _a;\n    var val = change.snapshot.val();\n    if (typeof val !== 'object') {\n        return val;\n    }\n    return __assign(__assign({}, change.snapshot.val()), (keyField ? (_a = {}, _a[keyField] = change.snapshot.key, _a) : null));\n}\nexport function useDatabaseObjectData(ref, options) {\n    var idField = checkIdField(options);\n    return useObservable(objectVal(ref, idField), \"database:objectVal:\" + ref.toString() + \":idField=\" + idField, checkStartWithValue(options));\n}\nexport function useDatabaseList(ref, options) {\n    var hash = \"database:list:\" + getUniqueIdForDatabaseQuery(ref);\n    return useObservable(list(ref), hash, options ? options.startWithValue : undefined);\n}\nexport function useDatabaseListData(ref, options) {\n    var idField = checkIdField(options);\n    return useObservable(listVal(ref, idField), \"database:listVal:\" + getUniqueIdForDatabaseQuery(ref) + \":idField=\" + idField, checkStartWithValue(options));\n}\n"]},"metadata":{},"sourceType":"module"}