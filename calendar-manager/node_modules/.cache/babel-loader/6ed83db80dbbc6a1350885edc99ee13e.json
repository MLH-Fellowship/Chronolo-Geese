{"ast":null,"code":"import * as React from 'react';\nimport { user } from 'rxfire/auth';\nimport { preloadAuth, preloadObservable, useAuth, useObservable } from '..';\nimport { from } from 'rxjs';\nimport { useFirebaseApp } from '../firebaseApp';\nexport function preloadUser(options) {\n  var _a;\n\n  var firebaseApp = ((_a = options) === null || _a === void 0 ? void 0 : _a.firebaseApp) || useFirebaseApp();\n  return preloadAuth({\n    firebaseApp: firebaseApp\n  }).then(function (auth) {\n    var result = preloadObservable(user(auth()), \"auth:user:\" + firebaseApp.name);\n    return result.toPromise();\n  });\n}\nexport function useUser(auth, options) {\n  var _a;\n\n  auth = auth || useAuth();\n  var currentUser = auth.currentUser || ((_a = options) === null || _a === void 0 ? void 0 : _a.startWithValue);\n  return useObservable(user(auth), \"auth:user:\" + auth.app.name, currentUser);\n}\nexport function useIdTokenResult(user, forceRefresh) {\n  if (forceRefresh === void 0) {\n    forceRefresh = false;\n  }\n\n  if (!user) {\n    throw new Error('you must provide a user');\n  }\n\n  var idToken$ = from(user.getIdTokenResult(forceRefresh));\n  return useObservable(idToken$, \"auth:idTokenResult:\" + user.uid + \":forceRefresh=\" + forceRefresh);\n}\nexport function ClaimsCheck(_a) {\n  var user = _a.user,\n      fallback = _a.fallback,\n      children = _a.children,\n      requiredClaims = _a.requiredClaims;\n  var claims = useIdTokenResult(user, false).claims;\n  var missingClaims = {};\n  Object.keys(requiredClaims).forEach(function (claim) {\n    if (requiredClaims[claim] !== claims[claim]) {\n      missingClaims[claim] = {\n        expected: requiredClaims[claim],\n        actual: claims[claim]\n      };\n    }\n  });\n\n  if (Object.keys(missingClaims).length === 0) {\n    return React.createElement(React.Fragment, null, children);\n  } else {\n    return React.createElement(React.Fragment, null, fallback);\n  }\n}\nexport function AuthCheck(_a) {\n  var auth = _a.auth,\n      fallback = _a.fallback,\n      children = _a.children,\n      requiredClaims = _a.requiredClaims;\n  var user = useUser(auth);\n\n  if (user) {\n    return requiredClaims ? React.createElement(ClaimsCheck, {\n      user: user,\n      fallback: fallback,\n      requiredClaims: requiredClaims\n    }, children) : React.createElement(React.Fragment, null, children);\n  } else {\n    return React.createElement(React.Fragment, null, fallback);\n  }\n}","map":{"version":3,"sources":["/Users/shiyuezhang/Desktop/myFiles/Chronolo-Geese/calendar-manager/node_modules/reactfire/auth/index.js"],"names":["React","user","preloadAuth","preloadObservable","useAuth","useObservable","from","useFirebaseApp","preloadUser","options","_a","firebaseApp","then","auth","result","name","toPromise","useUser","currentUser","startWithValue","app","useIdTokenResult","forceRefresh","Error","idToken$","getIdTokenResult","uid","ClaimsCheck","fallback","children","requiredClaims","claims","missingClaims","Object","keys","forEach","claim","expected","actual","length","createElement","Fragment","AuthCheck"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { user } from 'rxfire/auth';\nimport { preloadAuth, preloadObservable, useAuth, useObservable } from '..';\nimport { from } from 'rxjs';\nimport { useFirebaseApp } from '../firebaseApp';\nexport function preloadUser(options) {\n    var _a;\n    var firebaseApp = ((_a = options) === null || _a === void 0 ? void 0 : _a.firebaseApp) || useFirebaseApp();\n    return preloadAuth({ firebaseApp: firebaseApp }).then(function (auth) {\n        var result = preloadObservable(user(auth()), \"auth:user:\" + firebaseApp.name);\n        return result.toPromise();\n    });\n}\nexport function useUser(auth, options) {\n    var _a;\n    auth = auth || useAuth();\n    var currentUser = auth.currentUser || ((_a = options) === null || _a === void 0 ? void 0 : _a.startWithValue);\n    return useObservable(user(auth), \"auth:user:\" + auth.app.name, currentUser);\n}\nexport function useIdTokenResult(user, forceRefresh) {\n    if (forceRefresh === void 0) { forceRefresh = false; }\n    if (!user) {\n        throw new Error('you must provide a user');\n    }\n    var idToken$ = from(user.getIdTokenResult(forceRefresh));\n    return useObservable(idToken$, \"auth:idTokenResult:\" + user.uid + \":forceRefresh=\" + forceRefresh);\n}\nexport function ClaimsCheck(_a) {\n    var user = _a.user, fallback = _a.fallback, children = _a.children, requiredClaims = _a.requiredClaims;\n    var claims = useIdTokenResult(user, false).claims;\n    var missingClaims = {};\n    Object.keys(requiredClaims).forEach(function (claim) {\n        if (requiredClaims[claim] !== claims[claim]) {\n            missingClaims[claim] = {\n                expected: requiredClaims[claim],\n                actual: claims[claim]\n            };\n        }\n    });\n    if (Object.keys(missingClaims).length === 0) {\n        return React.createElement(React.Fragment, null, children);\n    }\n    else {\n        return React.createElement(React.Fragment, null, fallback);\n    }\n}\nexport function AuthCheck(_a) {\n    var auth = _a.auth, fallback = _a.fallback, children = _a.children, requiredClaims = _a.requiredClaims;\n    var user = useUser(auth);\n    if (user) {\n        return requiredClaims ? (React.createElement(ClaimsCheck, { user: user, fallback: fallback, requiredClaims: requiredClaims }, children)) : (React.createElement(React.Fragment, null, children));\n    }\n    else {\n        return React.createElement(React.Fragment, null, fallback);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}