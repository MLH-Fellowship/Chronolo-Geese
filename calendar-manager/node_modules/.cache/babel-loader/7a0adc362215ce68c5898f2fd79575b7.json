{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n  if (resultSelector) {\n    return function (source) {\n      return source.pipe(exhaustMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n\n  return function (source) {\n    return source.lift(new ExhaustMapOperator(project));\n  };\n}\n\nvar ExhaustMapOperator = /*@__PURE__*/function () {\n  function ExhaustMapOperator(project) {\n    this.project = project;\n  }\n\n  ExhaustMapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  };\n\n  return ExhaustMapOperator;\n}();\n\nvar ExhaustMapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ExhaustMapSubscriber, _super);\n\n  function ExhaustMapSubscriber(destination, project) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.project = project;\n    _this.hasSubscription = false;\n    _this.hasCompleted = false;\n    _this.index = 0;\n    return _this;\n  }\n\n  ExhaustMapSubscriber.prototype._next = function (value) {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  };\n\n  ExhaustMapSubscriber.prototype.tryNext = function (value) {\n    var result;\n    var index = this.index++;\n\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.hasSubscription = true;\n\n    this._innerSub(result);\n  };\n\n  ExhaustMapSubscriber.prototype._innerSub = function (result) {\n    var innerSubscriber = new SimpleInnerSubscriber(this);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    var innerSubscription = innerSubscribe(result, innerSubscriber);\n\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  };\n\n  ExhaustMapSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n\n    this.unsubscribe();\n  };\n\n  ExhaustMapSubscriber.prototype.notifyNext = function (innerValue) {\n    this.destination.next(innerValue);\n  };\n\n  ExhaustMapSubscriber.prototype.notifyError = function (err) {\n    this.destination.error(err);\n  };\n\n  ExhaustMapSubscriber.prototype.notifyComplete = function () {\n    this.hasSubscription = false;\n\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  };\n\n  return ExhaustMapSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/exhaustMap.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return function (source) { return source.pipe(exhaustMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) {\n        return source.lift(new ExhaustMapOperator(project));\n    };\n}\nvar ExhaustMapOperator = /*@__PURE__*/ (function () {\n    function ExhaustMapOperator(project) {\n        this.project = project;\n    }\n    ExhaustMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    };\n    return ExhaustMapOperator;\n}());\nvar ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExhaustMapSubscriber, _super);\n    function ExhaustMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.hasSubscription = false;\n        _this.hasCompleted = false;\n        _this.index = 0;\n        return _this;\n    }\n    ExhaustMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    ExhaustMapSubscriber.prototype.tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.hasSubscription = true;\n        this._innerSub(result);\n    };\n    ExhaustMapSubscriber.prototype._innerSub = function (result) {\n        var innerSubscriber = new SimpleInnerSubscriber(this);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        var innerSubscription = innerSubscribe(result, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    };\n    ExhaustMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    ExhaustMapSubscriber.prototype.notifyNext = function (innerValue) {\n        this.destination.next(innerValue);\n    };\n    ExhaustMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    ExhaustMapSubscriber.prototype.notifyComplete = function () {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return ExhaustMapSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map\n"]},"metadata":{},"sourceType":"module"}