{"ast":null,"code":"import { collectionData, doc, docData, fromCollectionRef } from 'rxfire/firestore';\nimport { preloadFirestore, useObservable, checkIdField, checkStartWithValue } from '..';\nimport { preloadObservable } from '../useObservable';\nimport { first } from 'rxjs/operators';\nimport { useFirebaseApp } from '../firebaseApp';\nvar CACHED_QUERIES = '_reactFireFirestoreQueryCache';\nvar cachedQueries = globalThis[CACHED_QUERIES] || [];\n\nif (!globalThis[CACHED_QUERIES]) {\n  globalThis[CACHED_QUERIES] = cachedQueries;\n}\n\nfunction getUniqueIdForFirestoreQuery(query) {\n  var index = cachedQueries.findIndex(function (cachedQuery) {\n    return cachedQuery.isEqual(query);\n  });\n\n  if (index > -1) {\n    return index;\n  }\n\n  return cachedQueries.push(query) - 1;\n}\n\nexport function preloadFirestoreDoc(refProvider, options) {\n  var _a;\n\n  var firebaseApp = ((_a = options) === null || _a === void 0 ? void 0 : _a.firebaseApp) || useFirebaseApp();\n  return preloadFirestore({\n    firebaseApp: firebaseApp\n  }).then(function (firestore) {\n    var ref = refProvider(firestore());\n    return preloadObservable(doc(ref), \"firestore:doc:\" + firebaseApp.name + \":\" + ref.path);\n  });\n}\nexport function useFirestoreDoc(ref, options) {\n  return useObservable(doc(ref), \"firestore:doc:\" + ref.firestore.app.name + \":\" + ref.path, options ? options.startWithValue : undefined);\n}\nexport function useFirestoreDocOnce(ref, options) {\n  return useObservable(doc(ref).pipe(first()), \"firestore:docOnce:\" + ref.firestore.app.name + \":\" + ref.path, checkStartWithValue(options));\n}\nexport function useFirestoreDocData(ref, options) {\n  var idField = checkIdField(options);\n  return useObservable(docData(ref, idField), \"firestore:docData:\" + ref.firestore.app.name + \":\" + ref.path + \":idField=\" + idField, checkStartWithValue(options));\n}\nexport function useFirestoreDocDataOnce(ref, options) {\n  var idField = checkIdField(options);\n  return useObservable(docData(ref, idField).pipe(first()), \"firestore:docDataOnce:\" + ref.firestore.app.name + \":\" + ref.path + \":idField=\" + idField, checkStartWithValue(options));\n}\nexport function useFirestoreCollection(query, options) {\n  var queryId = \"firestore:collection:\" + getUniqueIdForFirestoreQuery(query);\n  return useObservable(fromCollectionRef(query), queryId, checkStartWithValue(options));\n}\nexport function useFirestoreCollectionData(query, options) {\n  var idField = checkIdField(options);\n  var queryId = \"firestore:collectionData:\" + getUniqueIdForFirestoreQuery(query) + \":idField=\" + idField;\n  return useObservable(collectionData(query, idField), queryId, checkStartWithValue(options));\n}","map":{"version":3,"sources":["/Users/shiyuezhang/Desktop/myFiles/Chronolo-Geese/calendar-manager/node_modules/reactfire/firestore/index.js"],"names":["collectionData","doc","docData","fromCollectionRef","preloadFirestore","useObservable","checkIdField","checkStartWithValue","preloadObservable","first","useFirebaseApp","CACHED_QUERIES","cachedQueries","globalThis","getUniqueIdForFirestoreQuery","query","index","findIndex","cachedQuery","isEqual","push","preloadFirestoreDoc","refProvider","options","_a","firebaseApp","then","firestore","ref","name","path","useFirestoreDoc","app","startWithValue","undefined","useFirestoreDocOnce","pipe","useFirestoreDocData","idField","useFirestoreDocDataOnce","useFirestoreCollection","queryId","useFirestoreCollectionData"],"mappings":"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","sourcesContent":["import { collectionData, doc, docData, fromCollectionRef } from 'rxfire/firestore';\nimport { preloadFirestore, useObservable, checkIdField, checkStartWithValue } from '..';\nimport { preloadObservable } from '../useObservable';\nimport { first } from 'rxjs/operators';\nimport { useFirebaseApp } from '../firebaseApp';\nvar CACHED_QUERIES = '_reactFireFirestoreQueryCache';\nvar cachedQueries = globalThis[CACHED_QUERIES] || [];\nif (!globalThis[CACHED_QUERIES]) {\n    globalThis[CACHED_QUERIES] = cachedQueries;\n}\nfunction getUniqueIdForFirestoreQuery(query) {\n    var index = cachedQueries.findIndex(function (cachedQuery) { return cachedQuery.isEqual(query); });\n    if (index > -1) {\n        return index;\n    }\n    return cachedQueries.push(query) - 1;\n}\nexport function preloadFirestoreDoc(refProvider, options) {\n    var _a;\n    var firebaseApp = ((_a = options) === null || _a === void 0 ? void 0 : _a.firebaseApp) || useFirebaseApp();\n    return preloadFirestore({ firebaseApp: firebaseApp }).then(function (firestore) {\n        var ref = refProvider(firestore());\n        return preloadObservable(doc(ref), \"firestore:doc:\" + firebaseApp.name + \":\" + ref.path);\n    });\n}\nexport function useFirestoreDoc(ref, options) {\n    return useObservable(doc(ref), \"firestore:doc:\" + ref.firestore.app.name + \":\" + ref.path, options ? options.startWithValue : undefined);\n}\nexport function useFirestoreDocOnce(ref, options) {\n    return useObservable(doc(ref).pipe(first()), \"firestore:docOnce:\" + ref.firestore.app.name + \":\" + ref.path, checkStartWithValue(options));\n}\nexport function useFirestoreDocData(ref, options) {\n    var idField = checkIdField(options);\n    return useObservable(docData(ref, idField), \"firestore:docData:\" + ref.firestore.app.name + \":\" + ref.path + \":idField=\" + idField, checkStartWithValue(options));\n}\nexport function useFirestoreDocDataOnce(ref, options) {\n    var idField = checkIdField(options);\n    return useObservable(docData(ref, idField).pipe(first()), \"firestore:docDataOnce:\" + ref.firestore.app.name + \":\" + ref.path + \":idField=\" + idField, checkStartWithValue(options));\n}\nexport function useFirestoreCollection(query, options) {\n    var queryId = \"firestore:collection:\" + getUniqueIdForFirestoreQuery(query);\n    return useObservable(fromCollectionRef(query), queryId, checkStartWithValue(options));\n}\nexport function useFirestoreCollectionData(query, options) {\n    var idField = checkIdField(options);\n    var queryId = \"firestore:collectionData:\" + getUniqueIdForFirestoreQuery(query) + \":idField=\" + idField;\n    return useObservable(collectionData(query, idField), queryId, checkStartWithValue(options));\n}\n"]},"metadata":{},"sourceType":"module"}