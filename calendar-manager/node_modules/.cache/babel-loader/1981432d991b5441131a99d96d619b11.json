{"ast":null,"code":"var _jsxFileName = \"/Users/shiyuezhang/Desktop/myFiles/Chronolo-Geese/calendar-manager/src/pages/SignUp.js\";\nimport React, { useState } from \"react\";\nimport * as firebase from \"firebase\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFirestore } from \"reactfire\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nfunction SignUp() {\n  const [username, setUsername] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const userCollection = useFirestore().collection(\"users\");\n\n  const dotenv = require(\"dotenv\");\n\n  const env = dotenv.config().parse;\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(env);\n  }\n\n  const useStyles = makeStyles(theme => ({\n    error: {\n      position: \"absolute\",\n      top: \"77%\",\n      color: \"white\",\n      backgroundColor: \"rgba(250, 122, 112, 0.5)\",\n      borderRadius: 10,\n      maxWidth: \"250px\",\n      textAlign: \"center\"\n    }\n  }));\n  const classes = useStyles(); // sign user up\n\n  let submit = async () => {\n    console.log(email, password);\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(function (error) {\n      // Handle Errors here.\n      setError(error.message); // return;\n    });\n    firebase.auth().onAuthStateChanged(async function (user) {\n      if (user) {\n        await userCollection.doc(user.uid).get().then(doc => {\n          if (!doc.exists) {\n            userCollection.doc(user.uid).set({\n              displayName: username,\n              availability: [],\n              classCodes: [],\n              email: user.email,\n              isStudent: !checked,\n              uid: user.uid\n            });\n          }\n        }).then(res => history.push(\"/availability/\" + user.uid)).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        });\n      } else {\n        // No user is signed in.\n        console.log(\"There is no logged in user\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"sign-up\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    id: \"username\",\n    label: \"username\",\n    onChange: e => setUsername(e.target.value),\n    variant: \"outlined\",\n    type: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    id: \"email\",\n    label: \"email\",\n    onChange: e => setEmail(e.target.value),\n    variant: \"outlined\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    id: \"password\",\n    label: \"password\",\n    onChange: e => setPassword(e.target.value),\n    variant: \"outlined\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: checked,\n    onChange: e => setChecked(e.target.checked),\n    inputProps: {\n      \"aria-label\": \"primary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), \"Are you a professor?\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => submit(),\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, error)));\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/shiyuezhang/Desktop/myFiles/Chronolo-Geese/calendar-manager/src/pages/SignUp.js"],"names":["React","useState","firebase","Grid","TextField","Typography","Button","useHistory","useFirestore","makeStyles","Checkbox","SignUp","username","setUsername","error","setError","email","setEmail","checked","setChecked","password","setPassword","history","userCollection","collection","dotenv","require","env","config","parse","apps","length","initializeApp","useStyles","theme","position","top","color","backgroundColor","borderRadius","maxWidth","textAlign","classes","submit","console","log","auth","createUserWithEmailAndPassword","catch","message","onAuthStateChanged","user","doc","uid","get","then","exists","set","displayName","availability","classCodes","isStudent","res","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport * as firebase from \"firebase\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFirestore } from \"reactfire\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nfunction SignUp() {\n  const [username, setUsername] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const userCollection = useFirestore().collection(\"users\");\n  const dotenv = require(\"dotenv\");\n  const env = dotenv.config().parse;\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(env);\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    error: {\n      position: \"absolute\",\n      top: \"77%\",\n      color: \"white\",\n      backgroundColor: \"rgba(250, 122, 112, 0.5)\",\n      borderRadius: 10,\n      maxWidth: \"250px\",\n      textAlign: \"center\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  // sign user up\n  let submit = async () => {\n    console.log(email, password);\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch(function (error) {\n        // Handle Errors here.\n        setError(error.message);\n        // return;\n      });\n    firebase.auth().onAuthStateChanged(async function (user) {\n      if (user) {\n        await userCollection\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            if (!doc.exists) {\n              userCollection.doc(user.uid).set({\n                displayName: username,\n                availability: [],\n                classCodes: [],\n                email: user.email,\n                isStudent: !checked,\n                uid: user.uid,\n              });\n            }\n          })\n          .then(res =>  history.push(\"/availability/\" + user.uid))\n          .catch(function (error) {\n            console.log(\"Error getting document:\", error);\n          });\n      } else {\n        // No user is signed in.\n        console.log(\"There is no logged in user\");\n      }\n    });\n  };\n\n  return (\n    <>\n      <Grid item>\n        <Typography variant=\"h5\">sign-up</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          id=\"username\"\n          label=\"username\"\n          onChange={(e) => setUsername(e.target.value)}\n          variant=\"outlined\"\n          type=\"username\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          label=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n          variant=\"outlined\"\n          type=\"email\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          id=\"password\"\n          label=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n          variant=\"outlined\"\n          type=\"password\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Checkbox\n          checked={checked}\n          onChange={(e) => setChecked(e.target.checked)}\n          inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        />\n        Are you a professor?\n      </Grid>\n      <Grid item>\n        <Button\n          onClick={() => submit()}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </Grid>\n      <div className={classes.error}>\n        <Typography>{error}</Typography>\n      </div>\n    </>\n  );\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}