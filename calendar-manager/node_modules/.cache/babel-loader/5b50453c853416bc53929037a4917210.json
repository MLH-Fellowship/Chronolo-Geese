{"ast":null,"code":"var _jsxFileName = \"/Users/shiyuezhang/Desktop/myFiles/Chronolo-Geese/calendar-manager/src/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\"; // import Link from \"@material-ui/core/Link\";\n// import Paper from \"@material-ui/core/Paper\";\n// import Box from \"@material-ui/core/Box\";\n// import { Link as LinkTo } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as firebase from \"firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Login() {\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const dotenv = require(\"dotenv\");\n\n  const env = dotenv.config().parse;\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(env);\n  }\n\n  const useStyles = makeStyles(theme => ({\n    error: {\n      position: \"absolute\",\n      top: \"70%\",\n      color: \"white\",\n      backgroundColor: \"rgba(250, 122, 112, 0.5)\",\n      borderRadius: 10,\n      maxWidth: \"250px\",\n      textAlign: \"center\"\n    }\n  }));\n  const classes = useStyles(); // logs user in and redirects them to /myclasses\n\n  let submit = () => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(res => history.push(\"/myclasses/\" + res.user.uid)).catch(function (error) {\n      setError(error.message);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"log-in\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    label: \"email\",\n    onChange: e => setEmail(e.target.value),\n    variant: \"outlined\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"password\",\n    label: \"password\",\n    onChange: e => setPassword(e.target.value),\n    variant: \"outlined\",\n    type: \"password\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => submit(),\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, error)));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/shiyuezhang/Desktop/myFiles/Chronolo-Geese/calendar-manager/src/pages/Login.js"],"names":["React","useState","Grid","TextField","Typography","Button","makeStyles","firebase","useHistory","Login","error","setError","email","setEmail","password","setPassword","history","dotenv","require","env","config","parse","apps","length","initializeApp","useStyles","theme","position","top","color","backgroundColor","borderRadius","maxWidth","textAlign","classes","submit","auth","signInWithEmailAndPassword","then","res","push","user","uid","catch","message","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMe,OAAO,GAAGR,UAAU,EAA1B;;AACA,QAAMS,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,QAAMC,GAAG,GAAGF,MAAM,CAACG,MAAP,GAAgBC,KAA5B;;AAEA,MAAI,CAACd,QAAQ,CAACe,IAAT,CAAcC,MAAnB,EAA2B;AACzBhB,IAAAA,QAAQ,CAACiB,aAAT,CAAuBL,GAAvB;AACD;;AAED,QAAMM,SAAS,GAAGnB,UAAU,CAAEoB,KAAD,KAAY;AACvChB,IAAAA,KAAK,EAAE;AACLiB,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,GAAG,EAAE,KAFA;AAGLC,MAAAA,KAAK,EAAE,OAHF;AAILC,MAAAA,eAAe,EAAE,0BAJZ;AAKLC,MAAAA,YAAY,EAAE,EALT;AAMLC,MAAAA,QAAQ,EAAE,OANL;AAOLC,MAAAA,SAAS,EAAE;AAPN;AADgC,GAAZ,CAAD,CAA5B;AAYA,QAAMC,OAAO,GAAGT,SAAS,EAAzB,CAzBe,CA2Bf;;AACA,MAAIU,MAAM,GAAG,MAAM;AACjB5B,IAAAA,QAAQ,CACL6B,IADH,GAEGC,0BAFH,CAE8BzB,KAF9B,EAEqCE,QAFrC,EAGGwB,IAHH,CAGSC,GAAD,IAASvB,OAAO,CAACwB,IAAR,CAAa,gBAAgBD,GAAG,CAACE,IAAJ,CAASC,GAAtC,CAHjB,EAIGC,KAJH,CAIS,UAAUjC,KAAV,EAAiB;AACtBC,MAAAA,QAAQ,CAACD,KAAK,CAACkC,OAAP,CAAR;AACD,KANH;AAOD,GARD;;AAUA,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,QAAQ,EAAGC,CAAD,IAAOhC,QAAQ,CAACgC,CAAC,CAACC,MAAF,CAASC,KAAV,CAH3B;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAaE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,QAAQ,EAAGF,CAAD,IAAO9B,WAAW,CAAC8B,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,eAuBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMZ,MAAM,EADvB;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAvBF,eAkCE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACxB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,KAAb,CADF,CAlCF,CADF;AAwCD;;AAED,eAAeD,KAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n// import Link from \"@material-ui/core/Link\";\n// import Paper from \"@material-ui/core/Paper\";\n// import Box from \"@material-ui/core/Box\";\n// import { Link as LinkTo } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport * as firebase from \"firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Login() {\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const history = useHistory();\n  const dotenv = require(\"dotenv\");\n  const env = dotenv.config().parse;\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(env);\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    error: {\n      position: \"absolute\",\n      top: \"70%\",\n      color: \"white\",\n      backgroundColor: \"rgba(250, 122, 112, 0.5)\",\n      borderRadius: 10,\n      maxWidth: \"250px\",\n      textAlign: \"center\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  // logs user in and redirects them to /myclasses\n  let submit = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((res) => history.push(\"/myclasses/\" + res.user.uid))\n      .catch(function (error) {\n        setError(error.message);\n      });\n  };\n\n  return (\n    <>\n      <Grid item xs={12}>\n        <Typography variant=\"h5\">log-in</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          id=\"email\"\n          label=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n          variant=\"outlined\"\n          type=\"email\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          id=\"password\"\n          label=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n          variant=\"outlined\"\n          type=\"password\"\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          onClick={() => submit()}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n      </Grid>\n      <div className={classes.error}>\n        <Typography>{error}</Typography>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}