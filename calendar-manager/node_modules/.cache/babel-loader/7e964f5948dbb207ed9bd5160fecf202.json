{"ast":null,"code":"var _jsxFileName = \"/Users/shiyuezhang/Desktop/myFiles/Chronolo-Geese/calendar-manager/src/profile/Availability.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ScheduleSelector from \"react-schedule-selector\";\nimport { useFirestore //   AuthCheck,\n//   useUser,\n, useFirestoreDocData } from \"reactfire\";\nimport * as firebase from \"firebase/app\"; // import Typography from \"@material-ui/core/Typography\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { useParams, useHistory } from \"react-router-dom\";\n// import Navbar from \"../common/Navbar\";\n// const useStyles = makeStyles((theme) => ({\n//   body: {\n//     backgroundColor: '#E0B1CB',\n//     height: \"100vh\",\n//   },\n//   email: {\n//     color: '#5E548E',\n//     font: \"Nunito\",\n//   },\n//   classCodes: {},\n// }));\n\n/**\n * @return {ReactElement} Displays profile page\n */\n\nexport default function Availability({\n  uid\n}) {\n  const usersCollection = useFirestore().collection(\"users\");\n  const userData = useFirestoreDocData(usersCollection.doc(uid));\n  const [schedule, setSchedule] = useState([]);\n  const [initialize, setInitialize] = useState(false);\n\n  const loadAvailability = () => {\n    let dateTime = [];\n\n    for (let i = 0; i < userData.availability.length; i++) {\n      dateTime.push(userData.availability[i].toDate());\n    }\n\n    setSchedule(dateTime);\n    setInitialize(true);\n    return dateTime;\n  };\n\n  const handleChange = newSchedule => {\n    let firebase_schedule = [];\n    setSchedule(newSchedule);\n\n    for (let i = 0; i < newSchedule.length; i++) {\n      firebase_schedule.push(firebase.firestore.Timestamp.fromDate(newSchedule[i]));\n    }\n\n    usersCollection.doc(uid).update({\n      availability: firebase_schedule\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginRight: \"5vw\",\n      marginBottom: \"5vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ScheduleSelector, {\n    selection: schedule.length === 0 && !initialize ? loadAvailability() : schedule,\n    numDays: 7,\n    minTime: 8,\n    maxTime: 22,\n    hourlyChunks: 2,\n    timeFormat: \"h:mm A\",\n    dateFormat: \"ddd, MMM. DD\",\n    unselectedColor: \"#fff7ff\",\n    hoveredColor: \"#9F86C0\",\n    selectedColor: \"#5E548E\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/shiyuezhang/Desktop/myFiles/Chronolo-Geese/calendar-manager/src/profile/Availability.js"],"names":["React","useState","useEffect","ScheduleSelector","useFirestore","useFirestoreDocData","firebase","Availability","uid","usersCollection","collection","userData","doc","schedule","setSchedule","initialize","setInitialize","loadAvailability","dateTime","i","availability","length","push","toDate","handleChange","newSchedule","firebase_schedule","firestore","Timestamp","fromDate","update","marginRight","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SACEC,YADF,CAEE;AACA;AAHF,EAIEC,mBAJF,QAKO,WALP;AAMA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAGA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAA+B;AAC5C,QAAMC,eAAe,GAAGL,YAAY,GAAGM,UAAf,CAA0B,OAA1B,CAAxB;AACA,QAAMC,QAAQ,GAAGN,mBAAmB,CAACI,eAAe,CAACG,GAAhB,CAAoBJ,GAApB,CAAD,CAApC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMgB,gBAAgB,GAAG,MAAM;AAC7B,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACS,YAAT,CAAsBC,MAA1C,EAAkDF,CAAC,EAAnD,EAAuD;AACrDD,MAAAA,QAAQ,CAACI,IAAT,CAAcX,QAAQ,CAACS,YAAT,CAAsBD,CAAtB,EAAyBI,MAAzB,EAAd;AACD;;AACDT,IAAAA,WAAW,CAACI,QAAD,CAAX;AACAF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,WAAOE,QAAP;AACD,GARD;;AAUA,QAAMM,YAAY,GAAIC,WAAD,IAAiB;AACpC,QAAIC,iBAAiB,GAAG,EAAxB;AACAZ,IAAAA,WAAW,CAACW,WAAD,CAAX;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,WAAW,CAACJ,MAAhC,EAAwCF,CAAC,EAAzC,EAA6C;AAC3CO,MAAAA,iBAAiB,CAACJ,IAAlB,CACEhB,QAAQ,CAACqB,SAAT,CAAmBC,SAAnB,CAA6BC,QAA7B,CAAsCJ,WAAW,CAACN,CAAD,CAAjD,CADF;AAGD;;AACDV,IAAAA,eAAe,CAACG,GAAhB,CAAoBJ,GAApB,EAAyBsB,MAAzB,CAAgC;AAAEV,MAAAA,YAAY,EAAEM;AAAhB,KAAhC;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,WAAW,EAAE,KAAf;AAAsBC,MAAAA,YAAY,EAAE;AAApC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,SAAS,EACPnB,QAAQ,CAACQ,MAAT,KAAoB,CAApB,IAAyB,CAACN,UAA1B,GAAuCE,gBAAgB,EAAvD,GAA4DJ,QAFhE;AAIE,IAAA,OAAO,EAAE,CAJX;AAKE,IAAA,OAAO,EAAE,CALX;AAME,IAAA,OAAO,EAAE,EANX;AAOE,IAAA,YAAY,EAAE,CAPhB;AAQE,IAAA,UAAU,EAAC,QARb;AASE,IAAA,UAAU,EAAC,cATb;AAUE,IAAA,eAAe,EAAC,SAVlB;AAWE,IAAA,YAAY,EAAC,SAXf;AAYE,IAAA,aAAa,EAAC,SAZhB;AAaE,IAAA,QAAQ,EAAEW,YAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAmBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ScheduleSelector from \"react-schedule-selector\";\nimport {\n  useFirestore,\n  //   AuthCheck,\n  //   useUser,\n  useFirestoreDocData,\n} from \"reactfire\";\nimport * as firebase from \"firebase/app\";\n// import Typography from \"@material-ui/core/Typography\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { useParams, useHistory } from \"react-router-dom\";\n// import Navbar from \"../common/Navbar\";\n\n// const useStyles = makeStyles((theme) => ({\n//   body: {\n//     backgroundColor: '#E0B1CB',\n//     height: \"100vh\",\n//   },\n//   email: {\n//     color: '#5E548E',\n//     font: \"Nunito\",\n//   },\n//   classCodes: {},\n// }));\n\n/**\n * @return {ReactElement} Displays profile page\n */\nexport default function Availability({ uid }) {\n  const usersCollection = useFirestore().collection(\"users\");\n  const userData = useFirestoreDocData(usersCollection.doc(uid));\n  const [schedule, setSchedule] = useState([]);\n  const [initialize, setInitialize] = useState(false);\n\n  const loadAvailability = () => {\n    let dateTime = [];\n    for (let i = 0; i < userData.availability.length; i++) {\n      dateTime.push(userData.availability[i].toDate());\n    }\n    setSchedule(dateTime);\n    setInitialize(true);\n    return dateTime;\n  };\n\n  const handleChange = (newSchedule) => {\n    let firebase_schedule = [];\n    setSchedule(newSchedule);\n    for (let i = 0; i < newSchedule.length; i++) {\n      firebase_schedule.push(\n        firebase.firestore.Timestamp.fromDate(newSchedule[i])\n      );\n    }\n    usersCollection.doc(uid).update({ availability: firebase_schedule });\n  };\n\n  return (\n    <div style={{ marginRight: \"5vw\", marginBottom: \"5vh\" }}>\n      <ScheduleSelector\n        selection={\n          schedule.length === 0 && !initialize ? loadAvailability() : schedule\n        }\n        numDays={7}\n        minTime={8}\n        maxTime={22}\n        hourlyChunks={2}\n        timeFormat=\"h:mm A\"\n        dateFormat=\"ddd, MMM. DD\"\n        unselectedColor=\"#fff7ff\"\n        hoveredColor=\"#9F86C0\"\n        selectedColor=\"#5E548E\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}