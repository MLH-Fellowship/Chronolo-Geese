import * as React from 'react';
import { preloadPerformance } from '../firebaseApp';
export function SuspenseWithPerf(_a) {
    var children = _a.children, traceId = _a.traceId, fallback = _a.fallback, firePerf = _a.firePerf;
    var _b;
    if (!firePerf) {
        preloadPerformance().then(function (perf) { return perf(); });
    }
    var entries = ((_b = performance) === null || _b === void 0 ? void 0 : _b.getEntriesByName(traceId, 'measure')) || [];
    var startMarkName = "_" + traceId + "Start[" + entries.length + "]";
    var endMarkName = "_" + traceId + "End[" + entries.length + "]";
    var Fallback = function () {
        React.useLayoutEffect(function () {
            var _a;
            (_a = performance) === null || _a === void 0 ? void 0 : _a.mark(startMarkName);
            return function () {
                var _a, _b;
                (_a = performance) === null || _a === void 0 ? void 0 : _a.mark(endMarkName);
                (_b = performance) === null || _b === void 0 ? void 0 : _b.measure(traceId, startMarkName, endMarkName);
            };
        }, [traceId]);
        return React.createElement(React.Fragment, null, fallback);
    };
    return React.createElement(React.Suspense, { fallback: React.createElement(Fallback, null) }, children);
}
