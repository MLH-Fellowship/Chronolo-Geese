import { Observable } from 'rxjs';
function parameter$(_a) {
    var remoteConfig = _a.remoteConfig, key = _a.key, getter = _a.getter;
    return new Observable(function (subscriber) {
        remoteConfig.ensureInitialized().then(function () {
            subscriber.next(getter.bind(remoteConfig)(key));
        });
    });
}
export function getValue(remoteConfig, key) {
    var getter = remoteConfig.getValue;
    return parameter$({ remoteConfig: remoteConfig, key: key, getter: getter });
}
export function getString(remoteConfig, key) {
    var getter = remoteConfig.getString;
    return parameter$({ remoteConfig: remoteConfig, key: key, getter: getter });
}
export function getNumber(remoteConfig, key) {
    var getter = remoteConfig.getNumber;
    return parameter$({ remoteConfig: remoteConfig, key: key, getter: getter });
}
export function getBoolean(remoteConfig, key) {
    var getter = remoteConfig.getBoolean;
    return parameter$({ remoteConfig: remoteConfig, key: key, getter: getter });
}
export function getAll(remoteConfig) {
    var getter = remoteConfig.getAll;
    return parameter$({ remoteConfig: remoteConfig, key: null, getter: getter });
}
