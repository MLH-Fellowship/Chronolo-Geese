import { useRemoteConfig } from '../firebaseApp';
import { useObservable } from '../useObservable';
import { getValue, getString, getBoolean, getNumber, getAll } from './getValue';
function typeSafeUse(key, getter, remoteConfig) {
    var _a;
    remoteConfig = remoteConfig || useRemoteConfig();
    var appName = (_a = remoteConfig._storage) === null || _a === void 0 ? void 0 : _a.appName;
    var $value = getter(remoteConfig, key);
    return useObservable($value, "remoteConfig:" + key + ":" + getter.name + ":" + appName);
}
export function useRemoteConfigValue(key, remoteConfig) {
    return typeSafeUse(key, getValue, remoteConfig);
}
export function useRemoteConfigString(key, remoteConfig) {
    return typeSafeUse(key, getString, remoteConfig);
}
export function useRemoteConfigNumber(key, remoteConfig) {
    return typeSafeUse(key, getNumber, remoteConfig);
}
export function useRemoteConfigBoolean(key, remoteConfig) {
    return typeSafeUse(key, getBoolean, remoteConfig);
}
export function useRemoteConfigAll(key, remoteConfig) {
    return typeSafeUse(key, getAll, remoteConfig);
}
